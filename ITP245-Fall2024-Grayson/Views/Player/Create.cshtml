@model ITP245_Fall2024_GraysonModel.Player

@{
    ViewBag.Title = "Create Player";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- First Name -->
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName)
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <!-- Last Name -->
    <div class="form-group">
        @Html.LabelFor(model => model.LastName)
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>

    <!-- Email -->
    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <!-- Phone -->
    <div class="form-group">
        @Html.LabelFor(model => model.Phone)
        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
    </div>

    <!-- Birth Date -->
    <div class="form-group">
        @Html.LabelFor(model => model.BirthDate)
        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>

    <!-- City -->
    <div class="form-group">
        @Html.LabelFor(model => model.City)
        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <!-- Zip Code -->
    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode)
        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
    </div>

    <!-- Emergency Contact -->
    <div class="form-group">
        @Html.LabelFor(model => model.EmergencyContact)
        @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
    </div>

    <!-- Emergency Phone -->
    <div class="form-group">
        @Html.LabelFor(model => model.EmergencyPhone)
        @Html.EditorFor(model => model.EmergencyPhone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EmergencyPhone, "", new { @class = "text-danger" })
    </div>

    <!-- Active Player --> <div class="form-group"> @Html.Label("Active Player") @Html.CheckBoxFor(model => model.IsActivePlayer, new { @class = "form-check-input" }) @Html.ValidationMessageFor(model => model.IsActivePlayer, "", new { @class = "text-danger" }) </div> <!-- Leadership Team Manager --> <div class="form-group"> @Html.Label("Leadership Team Manager") @{ bool isChecked = Model?.IsLeadershipTeamManager ?? false; } <!-- Hidden field to ensure false is posted when the checkbox is unchecked --> @Html.Hidden("IsLeadershipTeamManager", false) @Html.CheckBox("IsLeadershipTeamManager", isChecked, new { @class = "form-check-input" }) @Html.ValidationMessageFor(model => model.IsLeadershipTeamManager, "", new { @class = "text-danger" }) </div>

    <!-- Teams (Rosters) --> <div class="form-group"> @Html.Label("Team") @Html.ListBox("SelectedTeamIds", (SelectList)ViewBag.TeamList, new { @class = "form-control" }) </div> <!-- Submit Button -->
    <input type="submit" value="Create" class="btn btn-success" />

    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
}
