@model IEnumerable<ITP245_Fall2024_GraysonModel.Player>

@{
    ViewBag.Title = "Players";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New Player", "Create", null, new { @class = "btn btn-success" })
</p>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th style="width: 15%;">Team</th>
            <th style="width: 25%;">Name</th>
            <th style="width: 20%;">Email</th>
            <th style="width: 15%;">Phone</th>
            <th style="width: 15%;">Manager</th>
            <th style="width: 10%;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @{
            // Get all teams from players' rosters
            var teams = Model.SelectMany(p => p.Rosters.Select(r => r.Team))
                             .Where(t => t != null)
                             .Distinct()
                             .OrderBy(t => t.Name)
                             .ToList();

            // Add a placeholder for "Unassigned" players
            var unassignedPlayers = Model.Where(p => !p.Rosters.Any()).ToList();
        }

        <!-- Display players under each team -->
        @foreach (var team in teams)
        {
            <tr>
                <th colspan="6">@team.Name</th>
            </tr>
            foreach (var player in Model.Where(p => p.Rosters.Any(r => r.TeamId == team.TeamId)))
            {
                <tr>
                    <td></td> <!-- Empty cell for team column -->
                    <td>
                        @Html.ActionLink(
                            $"{player.FirstName} {player.LastName}",
                            "Details",
                            new { id = player.PlayerId },
                            null)
                    </td>
                    <td>@(player.Email ?? "N/A")</td>
                    <td>@(player.Phone ?? "N/A")</td>
                    <td>
                        @{
                            var isManager = team.ManagerID == player.PlayerId ? "Manager" :
                                            team.AssistantManagerID == player.PlayerId ? "Assistant Manager" : "";
                        }
                        @if (!string.IsNullOrEmpty(isManager))
                        {
                            <div>@isManager</div>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = player.PlayerId }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("Delete", "Delete", new { id = player.PlayerId }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        }

        <!-- Display unassigned players under "Unassigned" group -->
        @if (unassignedPlayers.Any())
        {
            <tr>
                <th colspan="6">Unassigned</th>
            </tr>
            foreach (var player in unassignedPlayers)
            {
                <tr>
                    <td></td> <!-- Empty cell for team column -->
                    <td>
                        @Html.ActionLink(
                            $"{player.FirstName} {player.LastName}",
                            "Details",
                            new { id = player.PlayerId },
                            null)
                    </td>
                    <td>@(player.Email ?? "N/A")</td>
                    <td>@(player.Phone ?? "N/A")</td>
                    <td></td> <!-- No manager role -->
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = player.PlayerId }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("Delete", "Delete", new { id = player.PlayerId }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
