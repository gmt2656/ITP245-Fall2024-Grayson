@model ITP245_Fall2024_GraysonModel.Team
@using System.Configuration;

@{
    // Set the base image path to the Images folder
    var imagePath = Url.Content("~/Images/");
}

@if (Model != null && Model.TeamId != 0)
{
    <h2>Edit Team</h2> <!-- Display Edit title if it's an existing team -->
}
else
{
    <h2>Create Team</h2><!-- Display Create title if it's a new team -->
}

@if (Model != null && !string.IsNullOrEmpty(Model.ImageLocation))
{
    var image = string.Format("{0}{1}", Url.Content("~/Images/"), Path.GetFileName(Model.ImageLocation));
    <img id="TeamLogoImage" height="100" width="90" style="border:solid" src="@image" alt="Team Logo for @Model.Name" />
}
else
{
    <img id="TeamLogoImage" height="100" width="90" style="border:solid" src="@Url.Content("~/Images/placeholder.jpg")" alt="Placeholder Logo" />
}

@using (Html.BeginForm("Edit", "Team", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DivisionId, "Division")
        @Html.DropDownListFor(model => model.DivisionId, (IEnumerable<SelectListItem>)ViewBag.DivisionId, "-- Select Division --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManagerID, "Manager")
        @Html.DropDownListFor(model => model.ManagerID, (IEnumerable<SelectListItem>)ViewBag.ManagerID, "-- Select Manager --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssistantManagerID, "Assistant Manager")
        @Html.DropDownListFor(model => model.AssistantManagerID, (IEnumerable<SelectListItem>)ViewBag.AssistantManagerID, "-- Select Assistant Manager --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AssistantManagerID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortName)
        @Html.TextBoxFor(model => model.ShortName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
    </div>

    <!-- Team Logo Upload -->
    <div id="uploader" class="form-group">
        <div class="row">
            @Html.Label("Select Team Logo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="LogoImage" type="file" name="LogoImage" accept="image/*" onchange="show(this)" />
                <span>@Html.ValidationMessageFor(model => model.LogoImage, "", new { @class = "text-danger" })</span>
            </div>
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>

    <!-- Back to List Button -->
    <div class="form-group">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")

    <script type="text/javascript">
        function show(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#TeamLogoImage').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                $('#TeamLogoImage').attr('src', ''); // Clear the image preview if no file is selected
            }
        }
    </script>
}

